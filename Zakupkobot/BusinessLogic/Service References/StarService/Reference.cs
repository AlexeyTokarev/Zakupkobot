//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Runtime.Serialization;

namespace BusinessLogic.Service_References.StarService {
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="GetTendersRequestBase", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common.Contracts")]
    [Serializable()]
    [KnownType(typeof(GetTendersRequestFilterBase))]
    [KnownType(typeof(GetTendersLimitedAndPagedRequest))]
    [KnownType(typeof(GetTendersPagedRequest))]
    public partial class GetTendersRequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private System.Nullable<System.DateTime> ApplicationEndDateFromField;
        
        [OptionalField()]
        private System.Nullable<System.DateTime> ApplicationEndDateToField;
        
        [OptionalField()]
        private System.Nullable<int> CurrencyCodeField;
        
        [OptionalField()]
        private string CustomerInnField;
        
        [OptionalField()]
        private string CustomerNameField;
        
        [OptionalField()]
        private System.Nullable<System.DateTime> DateImportedFromField;
        
        [OptionalField()]
        private System.Nullable<System.DateTime> DateImportedToField;
        
        [OptionalField()]
        private System.Nullable<System.DateTime> DatePublishedFromField;
        
        [OptionalField()]
        private System.Nullable<System.DateTime> DatePublishedToField;
        
        [OptionalField()]
        private System.Nullable<bool> DocumentSearchEnabledField;
        
        [OptionalField()]
        private System.Nullable<bool> HasApplicationsField;
        
        [OptionalField()]
        private bool IsSMPField;
        
        [OptionalField()]
        private string KeywordsField;
        
        [OptionalField()]
        private System.Nullable<decimal> MaxApplicationGuaranteeField;
        
        [OptionalField()]
        private System.Nullable<decimal> MaxPriceField;
        
        [OptionalField()]
        private System.Nullable<decimal> MinApplicationGuaranteeField;
        
        [OptionalField()]
        private System.Nullable<decimal> MinPriceField;
        
        [OptionalField()]
        private string OkdpField;
        
        [OptionalField()]
        private string OrganizerInnField;
        
        [OptionalField()]
        private string OrganizerNameField;
        
        [OptionalField()]
        private string RegionField;
        
        [OptionalField()]
        private System.Nullable<int> SearchKindField;
        
        [OptionalField()]
        private System.Nullable<int> StateField;
        
        [OptionalField()]
        private System.Nullable<int> TenderIdField;
        
        [OptionalField()]
        private string TradeNumberField;
        
        [OptionalField()]
        private string TradeRegistrationNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public System.Nullable<System.DateTime> ApplicationEndDateFrom {
            get {
                return this.ApplicationEndDateFromField;
            }
            set {
                if ((this.ApplicationEndDateFromField.Equals(value) != true)) {
                    this.ApplicationEndDateFromField = value;
                    this.RaisePropertyChanged("ApplicationEndDateFrom");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<System.DateTime> ApplicationEndDateTo {
            get {
                return this.ApplicationEndDateToField;
            }
            set {
                if ((this.ApplicationEndDateToField.Equals(value) != true)) {
                    this.ApplicationEndDateToField = value;
                    this.RaisePropertyChanged("ApplicationEndDateTo");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<int> CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((this.CurrencyCodeField.Equals(value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [DataMember()]
        public string CustomerInn {
            get {
                return this.CustomerInnField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerInnField, value) != true)) {
                    this.CustomerInnField = value;
                    this.RaisePropertyChanged("CustomerInn");
                }
            }
        }
        
        [DataMember()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<System.DateTime> DateImportedFrom {
            get {
                return this.DateImportedFromField;
            }
            set {
                if ((this.DateImportedFromField.Equals(value) != true)) {
                    this.DateImportedFromField = value;
                    this.RaisePropertyChanged("DateImportedFrom");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<System.DateTime> DateImportedTo {
            get {
                return this.DateImportedToField;
            }
            set {
                if ((this.DateImportedToField.Equals(value) != true)) {
                    this.DateImportedToField = value;
                    this.RaisePropertyChanged("DateImportedTo");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<System.DateTime> DatePublishedFrom {
            get {
                return this.DatePublishedFromField;
            }
            set {
                if ((this.DatePublishedFromField.Equals(value) != true)) {
                    this.DatePublishedFromField = value;
                    this.RaisePropertyChanged("DatePublishedFrom");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<System.DateTime> DatePublishedTo {
            get {
                return this.DatePublishedToField;
            }
            set {
                if ((this.DatePublishedToField.Equals(value) != true)) {
                    this.DatePublishedToField = value;
                    this.RaisePropertyChanged("DatePublishedTo");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<bool> DocumentSearchEnabled {
            get {
                return this.DocumentSearchEnabledField;
            }
            set {
                if ((this.DocumentSearchEnabledField.Equals(value) != true)) {
                    this.DocumentSearchEnabledField = value;
                    this.RaisePropertyChanged("DocumentSearchEnabled");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<bool> HasApplications {
            get {
                return this.HasApplicationsField;
            }
            set {
                if ((this.HasApplicationsField.Equals(value) != true)) {
                    this.HasApplicationsField = value;
                    this.RaisePropertyChanged("HasApplications");
                }
            }
        }
        
        [DataMember()]
        public bool IsSMP {
            get {
                return this.IsSMPField;
            }
            set {
                if ((this.IsSMPField.Equals(value) != true)) {
                    this.IsSMPField = value;
                    this.RaisePropertyChanged("IsSMP");
                }
            }
        }
        
        [DataMember()]
        public string Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<decimal> MaxApplicationGuarantee {
            get {
                return this.MaxApplicationGuaranteeField;
            }
            set {
                if ((this.MaxApplicationGuaranteeField.Equals(value) != true)) {
                    this.MaxApplicationGuaranteeField = value;
                    this.RaisePropertyChanged("MaxApplicationGuarantee");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<decimal> MaxPrice {
            get {
                return this.MaxPriceField;
            }
            set {
                if ((this.MaxPriceField.Equals(value) != true)) {
                    this.MaxPriceField = value;
                    this.RaisePropertyChanged("MaxPrice");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<decimal> MinApplicationGuarantee {
            get {
                return this.MinApplicationGuaranteeField;
            }
            set {
                if ((this.MinApplicationGuaranteeField.Equals(value) != true)) {
                    this.MinApplicationGuaranteeField = value;
                    this.RaisePropertyChanged("MinApplicationGuarantee");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<decimal> MinPrice {
            get {
                return this.MinPriceField;
            }
            set {
                if ((this.MinPriceField.Equals(value) != true)) {
                    this.MinPriceField = value;
                    this.RaisePropertyChanged("MinPrice");
                }
            }
        }
        
        [DataMember()]
        public string Okdp {
            get {
                return this.OkdpField;
            }
            set {
                if ((object.ReferenceEquals(this.OkdpField, value) != true)) {
                    this.OkdpField = value;
                    this.RaisePropertyChanged("Okdp");
                }
            }
        }
        
        [DataMember()]
        public string OrganizerInn {
            get {
                return this.OrganizerInnField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerInnField, value) != true)) {
                    this.OrganizerInnField = value;
                    this.RaisePropertyChanged("OrganizerInn");
                }
            }
        }
        
        [DataMember()]
        public string OrganizerName {
            get {
                return this.OrganizerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerNameField, value) != true)) {
                    this.OrganizerNameField = value;
                    this.RaisePropertyChanged("OrganizerName");
                }
            }
        }
        
        [DataMember()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<int> SearchKind {
            get {
                return this.SearchKindField;
            }
            set {
                if ((this.SearchKindField.Equals(value) != true)) {
                    this.SearchKindField = value;
                    this.RaisePropertyChanged("SearchKind");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<int> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<int> TenderId {
            get {
                return this.TenderIdField;
            }
            set {
                if ((this.TenderIdField.Equals(value) != true)) {
                    this.TenderIdField = value;
                    this.RaisePropertyChanged("TenderId");
                }
            }
        }
        
        [DataMember()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [DataMember()]
        public string TradeRegistrationNumber {
            get {
                return this.TradeRegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeRegistrationNumberField, value) != true)) {
                    this.TradeRegistrationNumberField = value;
                    this.RaisePropertyChanged("TradeRegistrationNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="GetTendersRequestFilterBase", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common.Contracts")]
    [Serializable()]
    [KnownType(typeof(GetTendersLimitedAndPagedRequest))]
    [KnownType(typeof(GetTendersPagedRequest))]
    public partial class GetTendersRequestFilterBase : GetTendersRequestBase {
        
        [OptionalField()]
        private bool IsHiddenField;
        
        [OptionalField()]
        private int[] MarketPlaceIdsField;
        
        [OptionalField()]
        private TenderOrganizationLevel[] OrganizationLevelsField;
        
        [OptionalField()]
        private TenderPurchaseMethod[] PurchaseMethodsField;
        
        [OptionalField()]
        private int[] SectionIdsField;
        
        [OptionalField()]
        private int[] TenderRuleIdsField;
        
        [DataMember()]
        public bool IsHidden {
            get {
                return this.IsHiddenField;
            }
            set {
                if ((this.IsHiddenField.Equals(value) != true)) {
                    this.IsHiddenField = value;
                    this.RaisePropertyChanged("IsHidden");
                }
            }
        }
        
        [DataMember()]
        public int[] MarketPlaceIds {
            get {
                return this.MarketPlaceIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketPlaceIdsField, value) != true)) {
                    this.MarketPlaceIdsField = value;
                    this.RaisePropertyChanged("MarketPlaceIds");
                }
            }
        }
        
        [DataMember()]
        public TenderOrganizationLevel[] OrganizationLevels {
            get {
                return this.OrganizationLevelsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationLevelsField, value) != true)) {
                    this.OrganizationLevelsField = value;
                    this.RaisePropertyChanged("OrganizationLevels");
                }
            }
        }
        
        [DataMember()]
        public TenderPurchaseMethod[] PurchaseMethods {
            get {
                return this.PurchaseMethodsField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseMethodsField, value) != true)) {
                    this.PurchaseMethodsField = value;
                    this.RaisePropertyChanged("PurchaseMethods");
                }
            }
        }
        
        [DataMember()]
        public int[] SectionIds {
            get {
                return this.SectionIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionIdsField, value) != true)) {
                    this.SectionIdsField = value;
                    this.RaisePropertyChanged("SectionIds");
                }
            }
        }
        
        [DataMember()]
        public int[] TenderRuleIds {
            get {
                return this.TenderRuleIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderRuleIdsField, value) != true)) {
                    this.TenderRuleIdsField = value;
                    this.RaisePropertyChanged("TenderRuleIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="GetTendersLimitedAndPagedRequest", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Services.TenderService.Messaging")]
    [Serializable()]
    public partial class GetTendersLimitedAndPagedRequest : GetTendersRequestFilterBase {
        
        [OptionalField()]
        private LimitedAndPagedFilter FilterDataField;
        
        [DataMember()]
        public LimitedAndPagedFilter FilterData {
            get {
                return this.FilterDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterDataField, value) != true)) {
                    this.FilterDataField = value;
                    this.RaisePropertyChanged("FilterData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="GetTendersPagedRequest", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Services.TenderService.Messaging")]
    [Serializable()]
    public partial class GetTendersPagedRequest : GetTendersRequestFilterBase {
        
        [OptionalField()]
        private PagedFilter FilterDataField;
        
        [DataMember()]
        public PagedFilter FilterData {
            get {
                return this.FilterDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterDataField, value) != true)) {
                    this.FilterDataField = value;
                    this.RaisePropertyChanged("FilterData");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TenderOrganizationLevel", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common.Contracts." +
        "Enums")]
    public enum TenderOrganizationLevel : int {
        
        [EnumMember()]
        Fz94 = 1,
        
        [EnumMember()]
        Fz223 = 2,
        
        [EnumMember()]
        Commercial = 3,
        
        [EnumMember()]
        Fz44 = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TenderPurchaseMethod", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common.Contracts." +
        "Enums")]
    public enum TenderPurchaseMethod : int {
        
        [EnumMember()]
        ApplicationRequest = 1,
        
        [EnumMember()]
        Tender = 2,
        
        [EnumMember()]
        QuotationsRequest = 3,
        
        [EnumMember()]
        Auction = 4,
        
        [EnumMember()]
        LimitedTender = 5,
        
        [EnumMember()]
        DoubleStagedTender = 6,
        
        [EnumMember()]
        Single = 7,
        
        [EnumMember()]
        PricesRequest = 8,
        
        [EnumMember()]
        Other = 9,
        
        [EnumMember()]
        Preselection = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="PagedFilter", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Common")]
    [Serializable()]
    [KnownType(typeof(LimitedAndPagedFilter))]
    public partial class PagedFilter : SortedFilter {
        
        [OptionalField()]
        private int PageCountField;
        
        [OptionalField()]
        private int PageIndexField;
        
        [OptionalField()]
        private int PageSizeField;
        
        [DataMember()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [DataMember()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [DataMember()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="LimitedAndPagedFilter", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Common")]
    [Serializable()]
    public partial class LimitedAndPagedFilter : PagedFilter {
        
        [OptionalField()]
        private int ItemsLimitField;
        
        [DataMember()]
        public int ItemsLimit {
            get {
                return this.ItemsLimitField;
            }
            set {
                if ((this.ItemsLimitField.Equals(value) != true)) {
                    this.ItemsLimitField = value;
                    this.RaisePropertyChanged("ItemsLimit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="SortedFilter", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Common")]
    [Serializable()]
    [KnownType(typeof(PagedFilter))]
    [KnownType(typeof(LimitedAndPagedFilter))]
    public partial class SortedFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private System.Nullable<SortingDirection> SortingDirectionField;
        
        [OptionalField()]
        private System.Nullable<SortingField> SortingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public System.Nullable<SortingDirection> SortingDirection {
            get {
                return this.SortingDirectionField;
            }
            set {
                if ((this.SortingDirectionField.Equals(value) != true)) {
                    this.SortingDirectionField = value;
                    this.RaisePropertyChanged("SortingDirection");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<SortingField> SortingField {
            get {
                return this.SortingFieldField;
            }
            set {
                if ((this.SortingFieldField.Equals(value) != true)) {
                    this.SortingFieldField = value;
                    this.RaisePropertyChanged("SortingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="SortingDirection", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Common.Enums")]
    public enum SortingDirection : int {
        
        [EnumMember()]
        Asc = 1,
        
        [EnumMember()]
        Desc = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="SortingField", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Common.Enums")]
    public enum SortingField : int {
        
        [EnumMember()]
        Price = 1,
        
        [EnumMember()]
        DatePublished = 2,
        
        [EnumMember()]
        DateCreated = 3,
        
        [EnumMember()]
        DateBaseDataChanged = 4,
        
        [EnumMember()]
        TenderId = 5,
        
        [EnumMember()]
        LotName = 6,
        
        [EnumMember()]
        ApplicationEndDate = 7,
        
        [EnumMember()]
        State = 8,
        
        [EnumMember()]
        PurchaseMethod = 9,
        
        [EnumMember()]
        Weight = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="GetTendersResponse", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Services.TenderService.Messaging")]
    [Serializable()]
    public partial class GetTendersResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private CurrencyStatistics[] ExcludedCurrencyStatisticsField;
        
        [OptionalField()]
        private double ExecutionTimeField;
        
        [OptionalField()]
        private bool IsExternalExcludedField;
        
        [OptionalField()]
        private PagingSearchResultOfTenderInfo9G_Pu8y1L TendersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public CurrencyStatistics[] ExcludedCurrencyStatistics {
            get {
                return this.ExcludedCurrencyStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcludedCurrencyStatisticsField, value) != true)) {
                    this.ExcludedCurrencyStatisticsField = value;
                    this.RaisePropertyChanged("ExcludedCurrencyStatistics");
                }
            }
        }
        
        [DataMember()]
        public double ExecutionTime {
            get {
                return this.ExecutionTimeField;
            }
            set {
                if ((this.ExecutionTimeField.Equals(value) != true)) {
                    this.ExecutionTimeField = value;
                    this.RaisePropertyChanged("ExecutionTime");
                }
            }
        }
        
        [DataMember()]
        public bool IsExternalExcluded {
            get {
                return this.IsExternalExcludedField;
            }
            set {
                if ((this.IsExternalExcludedField.Equals(value) != true)) {
                    this.IsExternalExcludedField = value;
                    this.RaisePropertyChanged("IsExternalExcluded");
                }
            }
        }
        
        [DataMember()]
        public PagingSearchResultOfTenderInfo9G_Pu8y1L Tenders {
            get {
                return this.TendersField;
            }
            set {
                if ((object.ReferenceEquals(this.TendersField, value) != true)) {
                    this.TendersField = value;
                    this.RaisePropertyChanged("Tenders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="PagingSearchResultOfTenderInfo9G_Pu8y1L", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.Common.WcfServices.Contracts")]
    [Serializable()]
    public partial class PagingSearchResultOfTenderInfo9G_Pu8y1L : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private TenderInfo[] Itemsk__BackingFieldField;
        
        private int TotalRowsk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember(Name="<Items>k__BackingField", IsRequired=true)]
        public TenderInfo[] Itemsk__BackingField {
            get {
                return this.Itemsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Itemsk__BackingFieldField, value) != true)) {
                    this.Itemsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Itemsk__BackingField");
                }
            }
        }
        
        [DataMember(Name="<TotalRows>k__BackingField", IsRequired=true)]
        public int TotalRowsk__BackingField {
            get {
                return this.TotalRowsk__BackingFieldField;
            }
            set {
                if ((this.TotalRowsk__BackingFieldField.Equals(value) != true)) {
                    this.TotalRowsk__BackingFieldField = value;
                    this.RaisePropertyChanged("TotalRowsk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="CurrencyStatistics", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Services.TenderService.Messaging")]
    [Serializable()]
    public partial class CurrencyStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private System.Nullable<int> CurrencyCodeField;
        
        [OptionalField()]
        private decimal TotalCostField;
        
        [OptionalField()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public System.Nullable<int> CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((this.CurrencyCodeField.Equals(value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [DataMember()]
        public decimal TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((this.TotalCostField.Equals(value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [DataMember()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TenderInfo", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Services.TenderService.Messaging")]
    [Serializable()]
    public partial class TenderInfo : TenderInfoBase {
        
        [OptionalField()]
        private bool HideParticipantsInfoField;
        
        [OptionalField()]
        private TenderStatus TenderStatusField;
        
        [OptionalField()]
        private int WeightField;
        
        [DataMember()]
        public bool HideParticipantsInfo {
            get {
                return this.HideParticipantsInfoField;
            }
            set {
                if ((this.HideParticipantsInfoField.Equals(value) != true)) {
                    this.HideParticipantsInfoField = value;
                    this.RaisePropertyChanged("HideParticipantsInfo");
                }
            }
        }
        
        [DataMember()]
        public TenderStatus TenderStatus {
            get {
                return this.TenderStatusField;
            }
            set {
                if ((this.TenderStatusField.Equals(value) != true)) {
                    this.TenderStatusField = value;
                    this.RaisePropertyChanged("TenderStatus");
                }
            }
        }
        
        [DataMember()]
        public int Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="EntityDtoBaseWithTypedIdOfint", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.Common.WcfServices.Contracts")]
    [Serializable()]
    [KnownType(typeof(EntityDtoBase))]
    [KnownType(typeof(TenderInfoBase))]
    [KnownType(typeof(TenderInfo))]
    public partial class EntityDtoBaseWithTypedIdOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private int IDField;
        
        [OptionalField()]
        private int RowVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [DataMember()]
        public int RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((this.RowVersionField.Equals(value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="EntityDtoBase", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.Common.WcfServices.Contracts")]
    [Serializable()]
    [KnownType(typeof(TenderInfoBase))]
    [KnownType(typeof(TenderInfo))]
    public partial class EntityDtoBase : EntityDtoBaseWithTypedIdOfint {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TenderInfoBase", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Common")]
    [Serializable()]
    [KnownType(typeof(TenderInfo))]
    public partial class TenderInfoBase : EntityDtoBase {
        
        [OptionalField()]
        private System.Nullable<System.DateTime> ApplicationEndDateField;
        
        [OptionalField()]
        private decimal ApplicationGuaranteeField;
        
        [OptionalField()]
        private TenderGuaranteeType ApplicationGuaranteeTypeField;
        
        [OptionalField()]
        private System.Nullable<System.DateTime> ApplicationStartDateField;
        
        [OptionalField()]
        private System.Nullable<decimal> ContractGuaranteeField;
        
        [OptionalField()]
        private System.Nullable<TenderGuaranteeType> ContractGuaranteeTypeField;
        
        [OptionalField()]
        private int CurrencyCodeField;
        
        [OptionalField()]
        private System.Collections.Generic.Dictionary<string, string> CustomerKladrRegionsField;
        
        [OptionalField()]
        private string[] CustomerRegionNamesField;
        
        [OptionalField()]
        private System.Collections.Generic.Dictionary<string, string> CustomersField;
        
        [OptionalField()]
        private System.DateTime DatePublishedField;
        
        [OptionalField()]
        private string DeliveryAddressField;
        
        [OptionalField()]
        private bool HasApplicationsField;
        
        [OptionalField()]
        private bool IsSMPField;
        
        [OptionalField()]
        private string KladrRegionNameField;
        
        [OptionalField()]
        private string LotNameField;
        
        [OptionalField()]
        private int MarketPlaceIdField;
        
        [OptionalField()]
        private string MarketPlaceNameField;
        
        [OptionalField()]
        private MarketPlaceType MarketPlaceTypeField;
        
        [OptionalField()]
        private string NumberField;
        
        [OptionalField()]
        private string OrganizerInnField;
        
        [OptionalField()]
        private string OrganizerNameField;
        
        [OptionalField()]
        private decimal PriceField;
        
        [OptionalField()]
        private TenderPurchaseMethod PurchaseMethodField;
        
        [OptionalField()]
        private string QuantityField;
        
        [OptionalField()]
        private string RegistrationNumberField;
        
        [OptionalField()]
        private string SectionNameField;
        
        [OptionalField()]
        private int SourceIdField;
        
        [OptionalField()]
        private TenderState StateField;
        
        [OptionalField()]
        private string StateAtMarketPlaceField;
        
        [OptionalField()]
        private int TenderIdField;
        
        [OptionalField()]
        private int TenderRuleIdField;
        
        [OptionalField()]
        private string TenderRuleNameField;
        
        [OptionalField()]
        private string TradeNameField;
        
        [OptionalField()]
        private string UrlField;
        
        [DataMember()]
        public System.Nullable<System.DateTime> ApplicationEndDate {
            get {
                return this.ApplicationEndDateField;
            }
            set {
                if ((this.ApplicationEndDateField.Equals(value) != true)) {
                    this.ApplicationEndDateField = value;
                    this.RaisePropertyChanged("ApplicationEndDate");
                }
            }
        }
        
        [DataMember()]
        public decimal ApplicationGuarantee {
            get {
                return this.ApplicationGuaranteeField;
            }
            set {
                if ((this.ApplicationGuaranteeField.Equals(value) != true)) {
                    this.ApplicationGuaranteeField = value;
                    this.RaisePropertyChanged("ApplicationGuarantee");
                }
            }
        }
        
        [DataMember()]
        public TenderGuaranteeType ApplicationGuaranteeType {
            get {
                return this.ApplicationGuaranteeTypeField;
            }
            set {
                if ((this.ApplicationGuaranteeTypeField.Equals(value) != true)) {
                    this.ApplicationGuaranteeTypeField = value;
                    this.RaisePropertyChanged("ApplicationGuaranteeType");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<System.DateTime> ApplicationStartDate {
            get {
                return this.ApplicationStartDateField;
            }
            set {
                if ((this.ApplicationStartDateField.Equals(value) != true)) {
                    this.ApplicationStartDateField = value;
                    this.RaisePropertyChanged("ApplicationStartDate");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<decimal> ContractGuarantee {
            get {
                return this.ContractGuaranteeField;
            }
            set {
                if ((this.ContractGuaranteeField.Equals(value) != true)) {
                    this.ContractGuaranteeField = value;
                    this.RaisePropertyChanged("ContractGuarantee");
                }
            }
        }
        
        [DataMember()]
        public System.Nullable<TenderGuaranteeType> ContractGuaranteeType {
            get {
                return this.ContractGuaranteeTypeField;
            }
            set {
                if ((this.ContractGuaranteeTypeField.Equals(value) != true)) {
                    this.ContractGuaranteeTypeField = value;
                    this.RaisePropertyChanged("ContractGuaranteeType");
                }
            }
        }
        
        [DataMember()]
        public int CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((this.CurrencyCodeField.Equals(value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [DataMember()]
        public System.Collections.Generic.Dictionary<string, string> CustomerKladrRegions {
            get {
                return this.CustomerKladrRegionsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerKladrRegionsField, value) != true)) {
                    this.CustomerKladrRegionsField = value;
                    this.RaisePropertyChanged("CustomerKladrRegions");
                }
            }
        }
        
        [DataMember()]
        public string[] CustomerRegionNames {
            get {
                return this.CustomerRegionNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerRegionNamesField, value) != true)) {
                    this.CustomerRegionNamesField = value;
                    this.RaisePropertyChanged("CustomerRegionNames");
                }
            }
        }
        
        [DataMember()]
        public System.Collections.Generic.Dictionary<string, string> Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime DatePublished {
            get {
                return this.DatePublishedField;
            }
            set {
                if ((this.DatePublishedField.Equals(value) != true)) {
                    this.DatePublishedField = value;
                    this.RaisePropertyChanged("DatePublished");
                }
            }
        }
        
        [DataMember()]
        public string DeliveryAddress {
            get {
                return this.DeliveryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryAddressField, value) != true)) {
                    this.DeliveryAddressField = value;
                    this.RaisePropertyChanged("DeliveryAddress");
                }
            }
        }
        
        [DataMember()]
        public bool HasApplications {
            get {
                return this.HasApplicationsField;
            }
            set {
                if ((this.HasApplicationsField.Equals(value) != true)) {
                    this.HasApplicationsField = value;
                    this.RaisePropertyChanged("HasApplications");
                }
            }
        }
        
        [DataMember()]
        public bool IsSMP {
            get {
                return this.IsSMPField;
            }
            set {
                if ((this.IsSMPField.Equals(value) != true)) {
                    this.IsSMPField = value;
                    this.RaisePropertyChanged("IsSMP");
                }
            }
        }
        
        [DataMember()]
        public string KladrRegionName {
            get {
                return this.KladrRegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KladrRegionNameField, value) != true)) {
                    this.KladrRegionNameField = value;
                    this.RaisePropertyChanged("KladrRegionName");
                }
            }
        }
        
        [DataMember()]
        public string LotName {
            get {
                return this.LotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNameField, value) != true)) {
                    this.LotNameField = value;
                    this.RaisePropertyChanged("LotName");
                }
            }
        }
        
        [DataMember()]
        public int MarketPlaceId {
            get {
                return this.MarketPlaceIdField;
            }
            set {
                if ((this.MarketPlaceIdField.Equals(value) != true)) {
                    this.MarketPlaceIdField = value;
                    this.RaisePropertyChanged("MarketPlaceId");
                }
            }
        }
        
        [DataMember()]
        public string MarketPlaceName {
            get {
                return this.MarketPlaceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketPlaceNameField, value) != true)) {
                    this.MarketPlaceNameField = value;
                    this.RaisePropertyChanged("MarketPlaceName");
                }
            }
        }
        
        [DataMember()]
        public MarketPlaceType MarketPlaceType {
            get {
                return this.MarketPlaceTypeField;
            }
            set {
                if ((this.MarketPlaceTypeField.Equals(value) != true)) {
                    this.MarketPlaceTypeField = value;
                    this.RaisePropertyChanged("MarketPlaceType");
                }
            }
        }
        
        [DataMember()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [DataMember()]
        public string OrganizerInn {
            get {
                return this.OrganizerInnField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerInnField, value) != true)) {
                    this.OrganizerInnField = value;
                    this.RaisePropertyChanged("OrganizerInn");
                }
            }
        }
        
        [DataMember()]
        public string OrganizerName {
            get {
                return this.OrganizerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerNameField, value) != true)) {
                    this.OrganizerNameField = value;
                    this.RaisePropertyChanged("OrganizerName");
                }
            }
        }
        
        [DataMember()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [DataMember()]
        public TenderPurchaseMethod PurchaseMethod {
            get {
                return this.PurchaseMethodField;
            }
            set {
                if ((this.PurchaseMethodField.Equals(value) != true)) {
                    this.PurchaseMethodField = value;
                    this.RaisePropertyChanged("PurchaseMethod");
                }
            }
        }
        
        [DataMember()]
        public string Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityField, value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [DataMember()]
        public string RegistrationNumber {
            get {
                return this.RegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNumberField, value) != true)) {
                    this.RegistrationNumberField = value;
                    this.RaisePropertyChanged("RegistrationNumber");
                }
            }
        }
        
        [DataMember()]
        public string SectionName {
            get {
                return this.SectionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionNameField, value) != true)) {
                    this.SectionNameField = value;
                    this.RaisePropertyChanged("SectionName");
                }
            }
        }
        
        [DataMember()]
        public int SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [DataMember()]
        public TenderState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [DataMember()]
        public string StateAtMarketPlace {
            get {
                return this.StateAtMarketPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.StateAtMarketPlaceField, value) != true)) {
                    this.StateAtMarketPlaceField = value;
                    this.RaisePropertyChanged("StateAtMarketPlace");
                }
            }
        }
        
        [DataMember()]
        public int TenderId {
            get {
                return this.TenderIdField;
            }
            set {
                if ((this.TenderIdField.Equals(value) != true)) {
                    this.TenderIdField = value;
                    this.RaisePropertyChanged("TenderId");
                }
            }
        }
        
        [DataMember()]
        public int TenderRuleId {
            get {
                return this.TenderRuleIdField;
            }
            set {
                if ((this.TenderRuleIdField.Equals(value) != true)) {
                    this.TenderRuleIdField = value;
                    this.RaisePropertyChanged("TenderRuleId");
                }
            }
        }
        
        [DataMember()]
        public string TenderRuleName {
            get {
                return this.TenderRuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderRuleNameField, value) != true)) {
                    this.TenderRuleNameField = value;
                    this.RaisePropertyChanged("TenderRuleName");
                }
            }
        }
        
        [DataMember()]
        public string TradeName {
            get {
                return this.TradeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNameField, value) != true)) {
                    this.TradeNameField = value;
                    this.RaisePropertyChanged("TradeName");
                }
            }
        }
        
        [DataMember()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TenderGuaranteeType", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common.Contracts." +
        "Enums")]
    public enum TenderGuaranteeType : int {
        
        [EnumMember()]
        None = 0,
        
        [EnumMember()]
        Percent = 1,
        
        [EnumMember()]
        Currency = 2,
        
        [EnumMember()]
        TenderDocuments = 3,
        
        [EnumMember()]
        BankGaranty = 4,
        
        [EnumMember()]
        BankGarantyWithCash = 5,
        
        [EnumMember()]
        PercentTaxFree = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="MarketPlaceType", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common.Contracts." +
        "Enums")]
    public enum MarketPlaceType : int {
        
        [EnumMember()]
        Internal = 1,
        
        [EnumMember()]
        External = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TenderState", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common.Contracts." +
        "Enums")]
    public enum TenderState : int {
        
        [EnumMember()]
        ApplicationsFillingNotCompleted = 1,
        
        [EnumMember()]
        ApplicationsFillingCompleted = 2,
        
        [EnumMember()]
        Completed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TenderStatus", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Common.Enums")]
    public enum TenderStatus : int {
        
        [EnumMember()]
        FZ44_TenderPlan = 0,
        
        [EnumMember()]
        FZ44_Notification = 1,
        
        [EnumMember()]
        FZ44_Contract = 2,
        
        [EnumMember()]
        FZ223_TenderPlan = 3,
        
        [EnumMember()]
        FZ223_Notification = 4,
        
        [EnumMember()]
        FZ223_Contract = 5,
        
        [EnumMember()]
        RTS_Notification = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="AuthInfo", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.Common")]
    [Serializable()]
    public partial class AuthInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private int CommonOrganizationIdField;
        
        [OptionalField()]
        private int CommonUserIdField;
        
        [OptionalField()]
        private bool IsUserAuthenticatedField;
        
        [OptionalField()]
        private string SecurityTokenField;
        
        [OptionalField()]
        private string UserFullNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public int CommonOrganizationId {
            get {
                return this.CommonOrganizationIdField;
            }
            set {
                if ((this.CommonOrganizationIdField.Equals(value) != true)) {
                    this.CommonOrganizationIdField = value;
                    this.RaisePropertyChanged("CommonOrganizationId");
                }
            }
        }
        
        [DataMember()]
        public int CommonUserId {
            get {
                return this.CommonUserIdField;
            }
            set {
                if ((this.CommonUserIdField.Equals(value) != true)) {
                    this.CommonUserIdField = value;
                    this.RaisePropertyChanged("CommonUserId");
                }
            }
        }
        
        [DataMember()]
        public bool IsUserAuthenticated {
            get {
                return this.IsUserAuthenticatedField;
            }
            set {
                if ((this.IsUserAuthenticatedField.Equals(value) != true)) {
                    this.IsUserAuthenticatedField = value;
                    this.RaisePropertyChanged("IsUserAuthenticated");
                }
            }
        }
        
        [DataMember()]
        public string SecurityToken {
            get {
                return this.SecurityTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTokenField, value) != true)) {
                    this.SecurityTokenField = value;
                    this.RaisePropertyChanged("SecurityToken");
                }
            }
        }
        
        [DataMember()]
        public string UserFullName {
            get {
                return this.UserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFullNameField, value) != true)) {
                    this.UserFullNameField = value;
                    this.RaisePropertyChanged("UserFullName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="GetSimilarTendersPagedRequest", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Services.TenderService.Messaging")]
    [Serializable()]
    public partial class GetSimilarTendersPagedRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private PagedFilter FilterDataField;
        
        [OptionalField()]
        private int[] TenderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public PagedFilter FilterData {
            get {
                return this.FilterDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterDataField, value) != true)) {
                    this.FilterDataField = value;
                    this.RaisePropertyChanged("FilterData");
                }
            }
        }
        
        [DataMember()]
        public int[] TenderId {
            get {
                return this.TenderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderIdField, value) != true)) {
                    this.TenderIdField = value;
                    this.RaisePropertyChanged("TenderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="Statistics", Namespace="http://schemas.datacontract.org/2004/07/BaseTrade.TradeRegistry.WcfServices.Contr" +
        "acts.Services.TenderService.Messaging")]
    [Serializable()]
    public partial class Statistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string CodeField;
        
        [OptionalField()]
        private long TendersCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [DataMember()]
        public long TendersCount {
            get {
                return this.TendersCountField;
            }
            set {
                if ((this.TendersCountField.Equals(value) != true)) {
                    this.TendersCountField = value;
                    this.RaisePropertyChanged("TendersCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StarService.ITenderSearchService")]
    public interface ITenderSearchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTenders", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersResponse")]
        GetTendersResponse GetTenders(GetTendersPagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTenders", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersAsync(GetTendersPagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersAuthResponse")]
        GetTendersResponse GetTendersAuth(GetTendersPagedRequest request, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersAuthResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersAuthAsync(GetTendersPagedRequest request, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersLimited", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersLimitedResponse")]
        GetTendersResponse GetTendersLimited(GetTendersLimitedAndPagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersLimited", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersLimitedResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersLimitedAsync(GetTendersLimitedAndPagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersLimitedAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersLimitedAuthResponse")]
        GetTendersResponse GetTendersLimitedAuth(GetTendersLimitedAndPagedRequest request, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersLimitedAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersLimitedAuthResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersLimitedAuthAsync(GetTendersLimitedAndPagedRequest request, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForOrganization", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForOrganizationResponse")]
        GetTendersResponse GetTendersForOrganization(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForOrganization", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForOrganizationResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersForOrganizationAsync(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForOrganizationAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForOrganizationAuthResponse")]
        GetTendersResponse GetTendersForOrganizationAuth(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForOrganizationAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForOrganizationAuthResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersForOrganizationAuthAsync(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForUser", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForUserResponse")]
        GetTendersResponse GetTendersForUser(GetTendersPagedRequest request, System.Nullable<int> userCommonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForUser", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForUserResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersForUserAsync(GetTendersPagedRequest request, System.Nullable<int> userCommonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForUserAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForUserAuthResponse")]
        GetTendersResponse GetTendersForUserAuth(GetTendersPagedRequest request, System.Nullable<int> userCommonId, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersForUserAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersForUserAuthResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetTendersForUserAuthAsync(GetTendersPagedRequest request, System.Nullable<int> userCommonId, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetSimilarTenders", ReplyAction="http://tempuri.org/ITenderSearchService/GetSimilarTendersResponse")]
        GetTendersResponse GetSimilarTenders(GetSimilarTendersPagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetSimilarTenders", ReplyAction="http://tempuri.org/ITenderSearchService/GetSimilarTendersResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetSimilarTendersAsync(GetSimilarTendersPagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetSimilarTendersAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetSimilarTendersAuthResponse")]
        GetTendersResponse GetSimilarTendersAuth(GetSimilarTendersPagedRequest request, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetSimilarTendersAuth", ReplyAction="http://tempuri.org/ITenderSearchService/GetSimilarTendersAuthResponse")]
        System.Threading.Tasks.Task<GetTendersResponse> GetSimilarTendersAuthAsync(GetSimilarTendersPagedRequest request, AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetOkdpStatistics", ReplyAction="http://tempuri.org/ITenderSearchService/GetOkdpStatisticsResponse")]
        Statistics[] GetOkdpStatistics(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetOkdpStatistics", ReplyAction="http://tempuri.org/ITenderSearchService/GetOkdpStatisticsResponse")]
        System.Threading.Tasks.Task<Statistics[]> GetOkdpStatisticsAsync(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetRegionStatistics", ReplyAction="http://tempuri.org/ITenderSearchService/GetRegionStatisticsResponse")]
        Statistics[] GetRegionStatistics(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetRegionStatistics", ReplyAction="http://tempuri.org/ITenderSearchService/GetRegionStatisticsResponse")]
        System.Threading.Tasks.Task<Statistics[]> GetRegionStatisticsAsync(string[] codes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersCurrencyStatistics", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersCurrencyStatisticsResponse")]
        CurrencyStatistics[] GetTendersCurrencyStatistics(GetTendersPagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITenderSearchService/GetTendersCurrencyStatistics", ReplyAction="http://tempuri.org/ITenderSearchService/GetTendersCurrencyStatisticsResponse")]
        System.Threading.Tasks.Task<CurrencyStatistics[]> GetTendersCurrencyStatisticsAsync(GetTendersPagedRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITenderSearchServiceChannel : ITenderSearchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TenderSearchServiceClient : System.ServiceModel.ClientBase<ITenderSearchService>, ITenderSearchService {
        
        public TenderSearchServiceClient() {
        }
        
        public TenderSearchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TenderSearchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TenderSearchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TenderSearchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GetTendersResponse GetTenders(GetTendersPagedRequest request) {
            return base.Channel.GetTenders(request);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersAsync(GetTendersPagedRequest request) {
            return base.Channel.GetTendersAsync(request);
        }
        
        public GetTendersResponse GetTendersAuth(GetTendersPagedRequest request, AuthInfo authInfo) {
            return base.Channel.GetTendersAuth(request, authInfo);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersAuthAsync(GetTendersPagedRequest request, AuthInfo authInfo) {
            return base.Channel.GetTendersAuthAsync(request, authInfo);
        }
        
        public GetTendersResponse GetTendersLimited(GetTendersLimitedAndPagedRequest request) {
            return base.Channel.GetTendersLimited(request);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersLimitedAsync(GetTendersLimitedAndPagedRequest request) {
            return base.Channel.GetTendersLimitedAsync(request);
        }
        
        public GetTendersResponse GetTendersLimitedAuth(GetTendersLimitedAndPagedRequest request, AuthInfo authInfo) {
            return base.Channel.GetTendersLimitedAuth(request, authInfo);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersLimitedAuthAsync(GetTendersLimitedAndPagedRequest request, AuthInfo authInfo) {
            return base.Channel.GetTendersLimitedAuthAsync(request, authInfo);
        }
        
        public GetTendersResponse GetTendersForOrganization(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId) {
            return base.Channel.GetTendersForOrganization(request, organizationCommonId);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersForOrganizationAsync(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId) {
            return base.Channel.GetTendersForOrganizationAsync(request, organizationCommonId);
        }
        
        public GetTendersResponse GetTendersForOrganizationAuth(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId, AuthInfo authInfo) {
            return base.Channel.GetTendersForOrganizationAuth(request, organizationCommonId, authInfo);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersForOrganizationAuthAsync(GetTendersPagedRequest request, System.Nullable<int> organizationCommonId, AuthInfo authInfo) {
            return base.Channel.GetTendersForOrganizationAuthAsync(request, organizationCommonId, authInfo);
        }
        
        public GetTendersResponse GetTendersForUser(GetTendersPagedRequest request, System.Nullable<int> userCommonId) {
            return base.Channel.GetTendersForUser(request, userCommonId);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersForUserAsync(GetTendersPagedRequest request, System.Nullable<int> userCommonId) {
            return base.Channel.GetTendersForUserAsync(request, userCommonId);
        }
        
        public GetTendersResponse GetTendersForUserAuth(GetTendersPagedRequest request, System.Nullable<int> userCommonId, AuthInfo authInfo) {
            return base.Channel.GetTendersForUserAuth(request, userCommonId, authInfo);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetTendersForUserAuthAsync(GetTendersPagedRequest request, System.Nullable<int> userCommonId, AuthInfo authInfo) {
            return base.Channel.GetTendersForUserAuthAsync(request, userCommonId, authInfo);
        }
        
        public GetTendersResponse GetSimilarTenders(GetSimilarTendersPagedRequest request) {
            return base.Channel.GetSimilarTenders(request);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetSimilarTendersAsync(GetSimilarTendersPagedRequest request) {
            return base.Channel.GetSimilarTendersAsync(request);
        }
        
        public GetTendersResponse GetSimilarTendersAuth(GetSimilarTendersPagedRequest request, AuthInfo authInfo) {
            return base.Channel.GetSimilarTendersAuth(request, authInfo);
        }
        
        public System.Threading.Tasks.Task<GetTendersResponse> GetSimilarTendersAuthAsync(GetSimilarTendersPagedRequest request, AuthInfo authInfo) {
            return base.Channel.GetSimilarTendersAuthAsync(request, authInfo);
        }
        
        public Statistics[] GetOkdpStatistics(string[] codes) {
            return base.Channel.GetOkdpStatistics(codes);
        }
        
        public System.Threading.Tasks.Task<Statistics[]> GetOkdpStatisticsAsync(string[] codes) {
            return base.Channel.GetOkdpStatisticsAsync(codes);
        }
        
        public Statistics[] GetRegionStatistics(string[] codes) {
            return base.Channel.GetRegionStatistics(codes);
        }
        
        public System.Threading.Tasks.Task<Statistics[]> GetRegionStatisticsAsync(string[] codes) {
            return base.Channel.GetRegionStatisticsAsync(codes);
        }
        
        public CurrencyStatistics[] GetTendersCurrencyStatistics(GetTendersPagedRequest request) {
            return base.Channel.GetTendersCurrencyStatistics(request);
        }
        
        public System.Threading.Tasks.Task<CurrencyStatistics[]> GetTendersCurrencyStatisticsAsync(GetTendersPagedRequest request) {
            return base.Channel.GetTendersCurrencyStatisticsAsync(request);
        }
    }
}
